apiVersion: apps/v1
kind: Deployment
metadata:
  name: trillo-rt
  namespace: $namespace
  labels:
    app: trillo-rt
    app.kubernetes.io/name: "$APP_INSTANCE_NAME"
spec:
  replicas: 2
  template:
    metadata:
      name: trillo-rt
      namespace: $namespace
      labels:
        app: trillo-rt
        app.kubernetes.io/name: "$APP_INSTANCE_NAME"
    spec:
      serviceAccountName: trillo-rt
      containers:
        - name: trillo-rt
          image: $trilloRTImage
          imagePullPolicy: IfNotPresent
          env:
            - name: DATA_SERVICE_URL
              value: https://trillo-ds.$namespace.svc.cluster.local
            - name: CONTAINER_ORCHESTRATOR
              value: GKE
            - name: REDIS_CREDENTIALS
              value: $redisCachePassword
            - name: AGENT_LOCAL_PORT
              value: "6080"
          ports:
            - containerPort: 8020
              name: trillo-rt
          volumeMounts:
            - name: trillo-repo
              mountPath: /trillo-repo
            - name: trillo-rt-appdata
              mountPath: /trillo-rt-appdata
          livenessProbe:
            initialDelaySeconds: 180
            httpGet:
              scheme: HTTPS
              port: 8020
              path: /_healthcheck
          readinessProbe:
            initialDelaySeconds: 180
            httpGet:
              scheme: HTTPS
              port: 8020
              path: /_healthcheck
        - image: gcr.io/cloud-marketplace-tools/metering/ubbagent
          name: ubbagent
          env:
            - name: AGENT_CONFIG_FILE
              value: /etc/ubbagent/config.yaml
            - name: AGENT_LOCAL_PORT
              value: "6080"
            - name: AGENT_STATE_DIR
              value: /var/lib/ubbagent
            - name: AGENT_REPORT_DIR
              value: /var/lib/ubbagent/reports
            - name: AGENT_ENCODED_KEY
              valueFrom:
                secretKeyRef:
                  name: "$reportingSecret"
                  key: reporting-key
            - name: AGENT_CONSUMER_ID
              valueFrom:
                secretKeyRef:
                  name: "$reportingSecret"
                  key: consumer-id
          volumeMounts:
            - name: ubbagent-config
              mountPath: /etc/ubbagent
            - name: ubbagent-state
              mountPath: /var/lib/ubbagent
      restartPolicy: Always
      volumes:
        - name: ubbagent-config
          configMap:
            name: agent-config
        - name: ubbagent-state
          emptyDir: {}
        - name: trillo-repo
          nfs:
            server: repo-nfs.$namespace.svc.cluster.local
            path: /
        - name: trillo-rt-appdata
          nfs:
            server: appdata-nfs.$namespace.svc.cluster.local
            path: /
  selector:
    matchLabels:
      app: trillo-rt
---
apiVersion: v1
kind: Service
metadata:
  name: trillo-rt
  namespace: $namespace
  labels:
    app.kubernetes.io/name: "$APP_INSTANCE_NAME"
  annotations:
    cloud.google.com/app-protocols: '{"my-https-port":"HTTPS"}'
spec:
  type: NodePort
  selector:
    app: trillo-rt
  ports:
    - name: my-https-port
      protocol: TCP
      port: 443
      targetPort: 8020
---
apiVersion: v1
kind: Secret
metadata:
  name: $name-tls-secret
  labels:
    app.kubernetes.io/name: "$APP_INSTANCE_NAME"
    app.kubernetes.io/component: tls-secret
data:
  tls.key: "$base64EncodedPrivateKey"
  tls.crt: "$base64EncodedCertificate"
type: kubernetes.io/tls
