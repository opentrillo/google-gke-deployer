apiVersion: apps/v1
kind: Deployment
metadata:
  name: trillo-rt
  namespace: $namespace
  labels:
    app: trillo-rt
spec:
  replicas: 2
  template:
    metadata:
      name: trillo-rt
      namespace: $namespace
      labels:
        app: trillo-rt
    spec:
      serviceAccountName: trillo-rt
      containers:
        - name: trillo-rt
          image: $trilloRTImage
          imagePullPolicy: IfNotPresent
          env:
            - name: DATA_SERVICE_URL
              value: https://trillo-ds.$namespace.svc.cluster.local
            - name: CONTAINER_ORCHESTRATOR
              value: GKE
            - name: REDIS_CREDENTIALS
              value: $redisCachePassword
          ports:
            - containerPort: 8020
              name: trillo-rt
          volumeMounts:
            - name: trillo-repo
              mountPath: /trillo-repo
            - name: trillo-rt-appdata
              mountPath: /trillo-rt-appdata
          livenessProbe:
            initialDelaySeconds: 180
            httpGet:
              scheme: HTTPS
              port: 8020
              path: /_healthcheck
          readinessProbe:
            initialDelaySeconds: 180
            httpGet:
              scheme: HTTPS
              port: 8020
              path: /_healthcheck
      restartPolicy: Always
      volumes:
      - name: trillo-repo
        nfs:
          server: repo-nfs.$namespace.svc.cluster.local
          path: /
      - name: trillo-rt-appdata
        nfs:
          server: appdata-nfs.$namespace.svc.cluster.local
          path: /
  selector:
    matchLabels:
      app: trillo-rt
---
apiVersion: v1
kind: Service
metadata:
  name: trillo-rt
  namespace: $namespace
  annotations:
    cloud.google.com/app-protocols: '{"my-https-port":"HTTPS"}'
spec:
  type: NodePort
  selector:
    app: trillo-rt
  ports:
    - name: my-https-port
      protocol: TCP
      port: 443
      targetPort: 8020

